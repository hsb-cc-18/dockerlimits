buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'com.gradle.build-scan' version '2.1'
}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply from: rootProject.file('gradle/codecov.gradle')

group 'com.cloudcomputing.docker'
version '1.0'
mainClassName = 'com.cloudcomputing.docker.limits.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

idea{
    module{
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestImplementation.extendsFrom testImplementation
}

dependencies {
    // Were removed from JDK 11
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'javax.activation:activation:1.1.1'
    // Static code analysis annotations
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    // Other deps
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-guava:2.9.7"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.7"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.7"
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'com.github.docker-java:docker-java:3.1.0-rc-7'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.shell:spring-shell-starter:2.0.1.RELEASE'
    testCompile 'org.hibernate.validator:hibernate-validator-test-utils:6.0.13.Final'
    implementation 'com.github.rozidan:logger-spring-boot:b77b432764'
    implementation 'com.github.palantir.docker-compose-rule:docker-compose-rule-junit4:0.34.0'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation ('de.xn--ho-hia.storage_units:storage-units:4.0.0-20160812154711') {
        exclude group: 'de.xn--ho-hia.quality', module: 'null-analysis'
    }
    implementation 'com.github.sebhoss:null-analysis:null-analysis-3.0.2-20170108184519'
    implementation 'de.vandermeer:asciitable:0.3.2'
    testCompile "org.assertj:assertj-core:3.11.1"
    testCompile 'org.assertj:assertj-joda-time:2.2.0'
    // Junit docker rule, following 3 dependencies. https://github.com/tdomzal/junit-docker-rule/issues/42:
    testCompile 'com.github.tdomzal:junit-docker-rule:0.4.1'
    testCompile 'org.glassfish.jersey.inject:jersey-hk2:2.27'
    testCompile 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.25.1'

    testCompile group: 'com.shazam', name: 'shazamcrest', version: '0.11'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    
}

task integrationTest(type: Test) {
    group 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }

    if( System.getenv('TRAVIS') != null ) {
        exclude '**/*Stat*'
    }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

task copyTask(type: Copy) {
    from "$projectDir/src/test/resources"
    into "$buildDir/classes/java/main"
}
copyTask.dependsOn classes

bootJar {
    applicationDefaultJvmArgs = ["-Dspring.profiles.active=prod"]
}